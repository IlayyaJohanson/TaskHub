param (
    [string]$RepoName = "TaskHub",
    [string]$Private = "false" # "true" –∏–ª–∏ "false"
)

Write-Host "=== üöÄ –ê–≤—Ç–æ-–¥–µ–ø–ª–æ–π TaskHub –Ω–∞ GitHub ===" -ForegroundColor Cyan

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ Git ---
if (-not (Get-Command git -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–∫–∞—á–∞–π: https://git-scm.com/" -ForegroundColor Red
    exit
}

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI ---
if (-not (Get-Command gh -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå GitHub CLI (gh) –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–∫–∞—á–∞–π: https://cli.github.com/" -ForegroundColor Red
    exit
}

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH-–∫–ª—é—á–∞ ---
$sshPath = "$env:USERPROFILE\.ssh\id_ed25519"
if (-not (Test-Path "$sshPath")) {
    Write-Host "üîë SSH-–∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ì–µ–Ω–µ—Ä–∏—Ä—É—é..."
    ssh-keygen -t ed25519 -C "$env:USERNAME@github" -f $sshPath -N ""
    Write-Host "‚úÖ –ö–ª—é—á —Å–æ–∑–¥–∞–Ω: $sshPath"
}

# --- –ö–æ–ø–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ –±—É—Ñ–µ—Ä ---
Get-Content "$sshPath.pub" | Set-Clipboard
Write-Host "üìã –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä. –î–æ–±–∞–≤—å –µ–≥–æ –Ω–∞ GitHub:"
Write-Host "   https://github.com/settings/keys"
Write-Host "–ù–∞–∂–º–∏ Enter, –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—à—å –∫–ª—é—á..."
Pause

# --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è GH ---
$ghAuth = gh auth status 2>$null
if ($LASTEXITCODE -ne 0) {
    Write-Host "üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è GH..."
    gh auth login
}

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è PROJECT_CONTEXT.md ---
if (-not (Test-Path "PROJECT_CONTEXT.md")) {
    Write-Host "‚ö†Ô∏è –§–∞–π–ª PROJECT_CONTEXT.md –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞—é –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω..." -ForegroundColor Yellow
    @"
# PROJECT CONTEXT

(–∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞)
"@ | Out-File -Encoding UTF8 PROJECT_CONTEXT.md
} else {
    Write-Host "üìÑ –ù–∞–π–¥–µ–Ω PROJECT_CONTEXT.md ‚Äî –æ–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π" -ForegroundColor Green
}

# --- Git init ---
if (-not (Test-Path ".git")) {
    git init
    git checkout -b main
}

# --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –≤–∫–ª—é—á–∞—è PROJECT_CONTEXT.md ---
git add .
git commit -m "chore: initial commit with project structure and context" --allow-empty

# --- –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ –Ω–∞ GitHub ---
if ($Private -eq "true") {
    gh repo create $RepoName --private --source=. --remote=origin --push
} else {
    gh repo create $RepoName --public --source=. --remote=origin --push
}

Write-Host "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π $RepoName —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø—É—à–µ–Ω –Ω–∞ GitHub —Å PROJECT_CONTEXT.md!" -ForegroundColor Green
